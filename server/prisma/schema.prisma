// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id        Int      @id @default(autoincrement())
  nickname  String   @unique
  admin     Boolean  @default(false)
  email     String   @unique
  password  String? 
  products  Product[]
  chatrooms Chatroom_User[]
  chats     Chat[]
  locations  Location  @relation(fields: [locationId], references: [id])
  locationId Int
  img       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  chatrooms  Chatroom[]
  title     String  
  img       String?
  content   String
  quality   String
  exchanged  Boolean @default(false)
  users     User  @relation(fields: [userNickname], references: [nickname])
  userNickname    String
  locations  Location  @relation(fields: [locationId], references: [id])
  locationId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chatroom_User{
  id        Int      @id @default(autoincrement())
  chatrooms   Chatroom   @relation(fields: [chatroomId], references: [id])
  chatroomId Int
  users     User @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id        Int      @id @default(autoincrement())
  users   User @relation(fields: [userId], references: [id])
  userId  Int
  content   String
  read     Boolean @default (false)
  chatrooms Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chatroom {
  id        Int      @id @default(autoincrement()) 
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  users     Chatroom_User[]  
  chats     Chat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        Int      @id @default(autoincrement())
  lat   Float   
  lon   Float
  users     User?
  products  Product? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notice {
  id        Int      @id @default(autoincrement())
  title   String   
  content String
  userId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}